substitutions:
  # Default values, can be overridden when submitting the build
  _REGION: us-east1
  _SERVICE_NAME: auth
  _SECRET_NAME: auth-private-key
  _DOMAIN: auth.${PROJECT_ID}.measurementlab.net
steps:
  # 0. Ensure JWT signing secret exists
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    id: EnsureSecret
    entrypoint: bash
    args:
      - "-c"
      - |
        # Install Go and jose-util
        apt-get update && apt-get install -y golang-go
        export PATH=$$PATH:/root/go/bin
        go install github.com/go-jose/go-jose/jose-util/v4@latest

        # Run the secret generation script
        chmod +x scripts/ensure-jwt-secret.sh
        ./scripts/ensure-jwt-secret.sh

  # 1. Build the container image
  - name: "gcr.io/cloud-builders/docker"
    id: Build
    args:
      [
        "build",
        "-t",
        "${_REGION}-docker.pkg.dev/${PROJECT_ID}/m-lab/${_SERVICE_NAME}:$BUILD_ID",
        "-t",
        "${_REGION}-docker.pkg.dev/${PROJECT_ID}/m-lab/${_SERVICE_NAME}:latest",
        ".",
      ]

  # 2. Push the container image to Artifact Registry
  - name: "gcr.io/cloud-builders/docker"
    id: Push
    args:
      [
        "push",
        "${_REGION}-docker.pkg.dev/${PROJECT_ID}/m-lab/${_SERVICE_NAME}:${BUILD_ID}",
      ]
    waitFor: ["Build"] # Ensure build is finished before pushing

  # 3. Deploy to Cloud Run
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    id: Deploy
    entrypoint: gcloud
    args:
      [
        "run",
        "deploy",
        "${_SERVICE_NAME}",
        "--image",
        "${_REGION}-docker.pkg.dev/${PROJECT_ID}/m-lab/${_SERVICE_NAME}:$BUILD_ID",
        "--platform",
        "managed",
        "--region",
        "${_REGION}",
        "--allow-unauthenticated",
        "--set-secrets=/secrets/jwk-priv.json=${_SECRET_NAME}:latest",
        "--set-env-vars=PROJECT_ID=${PROJECT_ID}",
        "--memory=256Mi",
        "--cpu=1",
        "--project=${PROJECT_ID}",
      ]
    waitFor: ["Push", "EnsureSecret"]

  # 4. Create or verify domain mapping
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    id: DomainMapping
    entrypoint: gcloud
    args:
      - "run"
      - "domain-mappings"
      - "create"
      - "--service=${_SERVICE_NAME}"
      - "--domain=${_DOMAIN}"
      - "--region=${_REGION}"
      - "--project=${PROJECT_ID}"
      - "--quiet"
    allowFailure: true # Don't fail if mapping already exists
    waitFor: ["Deploy"]

images:
  - "${_REGION}-docker.pkg.dev/${PROJECT_ID}/m-lab/${_SERVICE_NAME}:$BUILD_ID"
  - "${_REGION}-docker.pkg.dev/${PROJECT_ID}/m-lab/${_SERVICE_NAME}:latest"
